<!DOCTYPE html>
<html>
<%
const homeComp = gameData.gameInfo.competitors[0];
const awayComp = gameData.gameInfo.competitors[1];
const homeTeam = homeComp.team;
const awayTeam = awayComp.team;

function getNumberWithOrdinal(n) {
    var s = ["th", "st", "nd", "rd"],
        v = n % 100;
    return n + (s[(v - 20) % 10] || s[v] || s[0]);
}

function formatYardline(yardsToEndzone, offenseAbbrev, defenseAbbrev) {
    if (yardsToEndzone == 50) {
        return "50";
    } else if (yardsToEndzone < 50) {
        return `${defenseAbbrev} ${yardsToEndzone}`
    } else {
        return `${offenseAbbrev} ${100 - yardsToEndzone}`
    }
}

function formatDistance(distance, yardline) {
    return (distance == 0 || yardline <= distance) ? "Goal" : distance
}

stat_key_title_mapping = {
    "ppa_plays": "Plays",
    "ppa_overall_total" : "Overall PPA",
    "ppa_overall_quarter1" : "&emsp;Quarter 1",
    "ppa_overall_quarter2" : "&emsp;Quarter 2",
    "ppa_overall_quarter3" : "&emsp;Quarter 3",
    "ppa_overall_quarter4" : "&emsp;Quarter 4",
    "ppa_passing_total" : "Passing PPA",
    "ppa_passing_quarter1" : "&emsp;Quarter 1",
    "ppa_passing_quarter2" : "&emsp;Quarter 2",
    "ppa_passing_quarter3" : "&emsp;Quarter 3",
    "ppa_passing_quarter4" : "&emsp;Quarter 4",
    "ppa_rushing_total" : "Rushing PPA",
    "ppa_rushing_quarter1" : "&emsp;Quarter 1",
    "ppa_rushing_quarter2" : "&emsp;Quarter 2",
    "ppa_rushing_quarter3" : "&emsp;Quarter 3",
    "ppa_rushing_quarter4" : "&emsp;Quarter 4",
    "rushing_power_success" : "Power Success Rate",
    "rushing_stuff_rate" : "Stuff Rate",
    "rushing_line_yds" : "Line Yards",
    "rushing_second_lvl_yds" : "Second-Level Yds",
    "rushing_open_field_yds" : "Open-Field Yds",
    "havoc_total" : "Havoc Rate",
    "havoc_front_seven" : "&emsp;from Front 7",
    "havoc_db" : "&emsp;from Secondary",
    "scoring_opps_opportunities" : "Scoring Opps",
    "scoring_opps_points" : "&emsp;Total Points",
    "scoring_opps_pts_per_opp" : "&emsp;Points per Opp",
    "field_pos_avg_start" : "Avg Starting FP",
    "field_pos_avg_starting_predicted_pts" : "&emsp;Predicted Points",
    "success_rates_standard_downs_total" : "Success Rate (Standard Downs)",
    "success_rates_standard_downs_quarter1" : "&emsp;Quarter 1",
    "success_rates_standard_downs_quarter2" : "&emsp;Quarter 2",
    "success_rates_standard_downs_quarter3" : "&emsp;Quarter 3",
    "success_rates_standard_downs_quarter4" : "&emsp;Quarter 4",
    "success_rates_passing_downs_total" : "Success Rate (Passing Downs)",
    "success_rates_passing_downs_quarter1" : "&emsp;Quarter 1",
    "success_rates_passing_downs_quarter2" : "&emsp;Quarter 2",
    "success_rates_passing_downs_quarter3" : "&emsp;Quarter 3",
    "success_rates_passing_downs_quarter4" : "&emsp;Quarter 4",
    "explosiveness_overall_total" : "Explosiveness Rate",
    "explosiveness_overall_quarter1" : "&emsp;Quarter 1",
    "explosiveness_overall_quarter2" : "&emsp;Quarter 2",
    "explosiveness_overall_quarter3" : "&emsp;Quarter 3",
    "explosiveness_overall_quarter4" : "&emsp;Quarter 4",
    "success_rates_overall_total" : "Success Rate",
    "success_rates_overall_quarter1" : "&emsp;Quarter 1",
    "success_rates_overall_quarter2" : "&emsp;Quarter 2",
    "success_rates_overall_quarter3" : "&emsp;Quarter 3",
    "success_rates_overall_quarter4" : "&emsp;Quarter 4",
}

%>
<%- include('../partials/head') %> 
<body>
    <div class="container-fluid">
        <div class="row">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <div>
                        <h1 class="h2"><%= awayTeam.nickname %> <%= awayComp.score %>, <%= homeTeam.nickname %> <%= homeComp.score %></h1>
                        <p class="text-small" id="game-date"></p>
                    </div>
                    <div class="btn-toolbar mb-2 mb-md-0">
                        <div class="btn-group me-2">
                            <a href="#wpChart" class="btn btn-sm btn-outline-primary">WP Chart</a>
                            <a href="#epChart" class="btn btn-sm btn-outline-primary">EPA Chart</a>
                            <% if (gameData.gameInfo.status.type.completed == true) { %>
                                <a class="btn btn-sm btn-outline-primary" href="#box-score">Box Score</a>
                            <% } %>
                            <a href="#scoring-plays" class="btn btn-sm btn-outline-primary">Scoring Plays</a>
                            <a href="#all-plays" class="btn btn-sm btn-outline-primary">All Plays</a>
                            <a class="btn btn-sm btn-outline-primary" href="https://www.espn.com/college-football/game/_/gameId/<%= gameData.gameInfo.id %>">ESPN</a>
                        </div>
                    </div>
                </div>
            </main>
        </div>
        <div class="row">
            <main class="col-md-6 ms-sm-auto col-lg-6 px-md-4">
                <div>
                    <h1 class="h2">Win Probability</h1>
                    <p class="text-small"><a id="wp-download" download="game-wp-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p>
                </div>
                <canvas class="my-4 w-100" id="wpChart" width="900" height="380"></canvas>
            </main>
            <main class="col-md-6 ms-sm-auto col-lg-6 px-md-4">
                <div>
                    <h1 class="h2">Expected Points</h1>
                    <p class="text-small"><a id="ep-download" download="game-ep-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p>
                </div>
                <canvas class="my-4 w-100" id="epChart" width="900" height="380"></canvas>
            </main>
        </div>
        <% if (gameData.gameInfo.status.type.completed == true) { %>
        <div class="row">
            <div class="px-md-4">
                <h2 id="box-score">Advanced Box Score</h2>
                <p class="text-small">Data from CollegeFootballData.com. <i>Note: Does not include garbage time.</i></p>
            </div>
            <% if (gameData.boxScore != null && gameData.boxScore.length > 0) { %>
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["ppa_plays","ppa_overall_total","ppa_overall_quarter1","ppa_overall_quarter2","ppa_overall_quarter3","ppa_overall_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <% var columns = ["ppa_passing_total","ppa_passing_quarter1","ppa_passing_quarter2","ppa_passing_quarter3","ppa_passing_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <% var columns = ["ppa_rushing_total","ppa_rushing_quarter1","ppa_rushing_quarter2","ppa_rushing_quarter3","ppa_rushing_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["success_rates_overall_total","success_rates_overall_quarter1","success_rates_overall_quarter2","success_rates_overall_quarter3","success_rates_overall_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
    
                    <div class="table-responsive">
                        <% var columns = ["success_rates_standard_downs_total","success_rates_standard_downs_quarter1","success_rates_standard_downs_quarter2","success_rates_standard_downs_quarter3","success_rates_standard_downs_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
    
                    <div class="table-responsive">
                        <% var columns = ["success_rates_passing_downs_total","success_rates_passing_downs_quarter1","success_rates_passing_downs_quarter2","success_rates_passing_downs_quarter3","success_rates_passing_downs_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["explosiveness_overall_total","explosiveness_overall_quarter1","explosiveness_overall_quarter2","explosiveness_overall_quarter3","explosiveness_overall_quarter4"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <% var columns = ["rushing_power_success","rushing_stuff_rate","rushing_line_yds","rushing_second_lvl_yds","rushing_open_field_yds"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <% var columns = ["havoc_total","havoc_front_seven","havoc_db","scoring_opps_opportunities","scoring_opps_points","scoring_opps_pts_per_opp","field_pos_avg_start","field_pos_avg_starting_predicted_pts"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.map(group => group.team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.location) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td align="left"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.forEach(teamData => { %>
                                            <td align="center"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            <% } else { %>
                <p class="col-md-12 text-center">No box score data for this game.</p>
            <% } %>
        </div>
        <% } %>
        <div class="row">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <h2 id="scoring-plays">Scoring Plays</h2>
                <div class="table-responsive">
                    <% if (gameData.scoringPlays != null && gameData.scoringPlays.length > 0) { %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Time</th>
                                    <th style="text-align: center;">Offense</th>
                                    <th style="text-align: left;">Play Description</th>
                                    <th style="text-align: center;">EPA</th>
                                    <th style="text-align: center;">WP%</th>
                                    <th style="text-align: right;">WPA</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% gameData.scoringPlays.forEach(play => { %>
                                    <tr>
                                        <% 
                                            var period = `Q${play.period}`;
                                            if (play.period > 5) {
                                                period = `${play.period - 4}OT`
                                            } else if (play.period == 5) {
                                                period = "OT"
                                            } else {
                                                period = `Q${play.period} ${play.clock.displayValue}`;
                                            }

                                            var offense = (play.start.team.id == homeTeam.id) ? homeTeam : awayTeam;
                                            var defense = (play.start.team.id == homeTeam.id) ? awayTeam : homeTeam;
                                        %>
                                        <td align="left"><%= period %></td>
                                        <td align="center"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.start.team.id %>.png" alt="ESPN team id <%= play.start.team.id %>"/></td>
                                        <td align="left">(<%= getNumberWithOrdinal(play.start.down) %> & <%= formatDistance(play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %></td>
                                        
                                        <td align="center"><%= (Math.round(play.expectedPoints.added * 100) / 100).toPrecision(3) %></td>
                                        <td align="center"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toPrecision(3) %>%</td>
                                        <td align="right"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toPrecision(3) %>%</td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <p class="text-center">No scoring plays in this game.</p>
                    <% } %>
                </div>
            </main>
        </div>
        <div class="row">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <h2 id="all-plays">All Plays</h2>
                <div class="table-responsive">
                    <% if (gameData.plays != null && gameData.plays.length > 0) { %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Time</th>
                                    <th style="text-align: center;">Offense</th>
                                    <th style="text-align: left;">Play Description</th>
                                    <th style="text-align: center;">EPA</th>
                                    <th style="text-align: center;">WP%</th>
                                    <th style="text-align: right;">WPA</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% gameData.plays.forEach(play => { %>
                                    <tr>
                                        <% 
                                            var period = `Q${play.period}`;
                                            if (play.period > 5) {
                                                period = `${play.period - 4}OT`
                                            } else if (play.period == 5) {
                                                period = "OT"
                                            } else {
                                                period = `Q${play.period} ${play.clock.displayValue}`;
                                            }

                                            var offense = (play.start.team.id == homeTeam.id) ? homeTeam : awayTeam;
                                            var defense = (play.start.team.id == homeTeam.id) ? awayTeam : homeTeam;
                                        %>
                                        <td align="left"><%= period %></td>
                                        <td align="center"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.start.team.id %>.png" alt="ESPN team id <%= play.start.team.id %>"/></td>
                                        <td align="left">(<%= getNumberWithOrdinal(play.start.down) %> & <%= formatDistance(play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %></td>
                                        
                                        
                                        <td align="center"><%= (Math.round(play.expectedPoints.added * 100) / 100).toPrecision(3) %></td>
                                        <td align="center"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toPrecision(3) %>%</td>
                                        <td align="right"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toPrecision(3) %>%</td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <p class="text-center">No plays in this game.</p>
                    <% } %>
                </div>
                <!-- <p id="content"></p> -->
            </main>
        </div>
    </div>
    <%- include('../partials/footer') %>
    
    <link href="/assets/css/dashboard.css" rel="stylesheet">
    <link href="/assets/css/blog.css" rel="stylesheet">
    <%- include('../partials/scripts') %>        
    <script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js" integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous"></script>
    <script>
        const DateTime = luxon.DateTime;
        var gameData = <%- JSON.stringify(gameData) %>;
        // document.body.querySelector("#content").innerHTML = "<pre>" + JSON.stringify(gameData, null, 2) +  "</pre>";
        if (gameData.gameInfo.status.type.completed == true) {
            document.body.querySelector("#game-date").innerText = gameData.gameInfo.status.type.detail + " - " + DateTime.fromISO(gameData.gameInfo.date).toLocaleString(DateTime.DATETIME_FULL);
        } else {
            var airings = gameData.gameInfo.airings
            var airingLink = (gameData.gameInfo.airings.length > 0) ? gameData.gameInfo.airings[0].webAiringLink : null
            if (airingLink != null) {
                document.body.querySelector("#game-date").innerHTML = "<a href=" + airingLink + ">LIVE</a> - " + gameData.gameInfo.status.type.detail
            } else {
                document.body.querySelector("#game-date").innerText = "LIVE - " + gameData.gameInfo.status.type.detail
            }
        }

        // https://dev.to/noemelo/how-to-save-chart-as-image-chart-js-2l0i
        //Download Chart Image
        document.getElementById("wp-download").addEventListener('click', function() {
            /*Get image of canvas element*/
            var url_base64jp = document.getElementById("wpChart").toDataURL("image/jpg");
            /*get download button (tag: <a></a>) */
            var a =  document.getElementById("wp-download");
            /*insert chart image url to download button (tag: <a></a>) */
            a.href = url_base64jp;
        });

        // //Download Chart Image
        document.getElementById("ep-download").addEventListener('click', function() {
            /*Get image of canvas element*/
            var url_base64jp = document.getElementById("epChart").toDataURL("image/jpg");
            /*get download button (tag: <a></a>) */
            var a =  document.getElementById("ep-download");
            /*insert chart image url to download button (tag: <a></a>) */
            a.href = url_base64jp;
        });
      </script>
    </script>
    <script src="/assets/js/dashboard.js"></script>
</body>
</html>