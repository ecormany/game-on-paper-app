<!DOCTYPE html>
<html>
<%
const homeComp = gameData.gameInfo.competitors[0];
const awayComp = gameData.gameInfo.competitors[1];
const homeTeam = homeComp.team;
const awayTeam = awayComp.team;

function getNumberWithOrdinal(n) {
    var s = ["th", "st", "nd", "rd"];
    v = n % 100;
    return n + (s[(v - 20) % 10] || s[v] || s[0]);
}

function formatDown(down, playType) {
    if (playType.includes("Kickoff")) {
        return "Kickoff"
    } else if (playType.includes("Extra Point") || playType.includes("Conversion")) {
        return "PAT"
    } else if (down > -1) {
        return getNumberWithOrdinal(down)
    } else {
        return down
    }
}

function formatYardline(yardsToEndzone, offenseAbbrev, defenseAbbrev) {
    if (yardsToEndzone == 50) {
        return "50";
    } else if (yardsToEndzone < 50) {
        return `${defenseAbbrev} ${yardsToEndzone}`
    } else {
        return `${offenseAbbrev} ${100 - yardsToEndzone}`
    }
}

function formatDistance(down, type, distance, yardline) {
    var dist = (distance == 0 || yardline <= distance) ? "Goal" : distance
    var downForm = formatDown(down, type)
    if (downForm.includes("Kickoff") || downForm.includes("PAT")) {
        return downForm
    } else {
        return downForm + " & " + dist
    }
}

stat_key_title_mapping = {
    "EPA_plays": "Total Plays",
    "EPA_overall_total" : "Total EPA",
    "EPA_passing_overall" : "Passing EPA",
    "EPA_rushing_overall" : "Rushing EPA",
    "rushes" : "Rushes",
    "rushing_power_success" : "Power Success Runs",
    "rushing_stuff_rate" : "Stuffed Runs",
    "rushing_stopped_rate": "Stopped Runs",
    "rushing_opportunity_rate" : "Opportunity Runs",
    "rushing_highlight_run" : "Highlight Runs",
    "havoc_total" : "Havoc Plays",
    "havoc_total_pass" : "&emsp;&emsp;Passing",
    "havoc_total_rush" : "&emsp;&emsp;Rushing",
    "EPA_fg" : "Field Goal EPA",
    "EPA_punt" : "Punt EPA",
    "EPA_kickoff" : "Kickoff EPA",
    "TFL" : "TFLs",
    "TFL_pass" : "&emsp;&emsp;Passing",
    "TFL_rush" : "&emsp;&emsp;Rushing",
    "EPA_success" : "EPA Success Plays",
    "EPA_success_pass" : "&emsp;&emsp;Passing",
    "EPA_success_rush" : "&emsp;&emsp;Rushing",
    "EPA_success_standard_down" : "&emsp;&emsp;Standard Down",
    "EPA_success_passing_down": "&emsp;&emsp;Passing Down",
    "EPA_explosive" : "EPA Explosive Plays",
    "EPA_explosive_passing" : "&emsp;&emsp;Passing",
    "EPA_explosive_rushing" : "&emsp;&emsp;Rushing",
    "scoring_opps_opportunities" : "Scoring Opps",
    "scoring_opps_points" : "&emsp;&emsp;Total Points",
    "scoring_opps_pts_per_opp" : "&emsp;&emsp;Points per Opp",
    "field_pos_avg_start" : "Avg Starting FP",
    "field_pos_avg_starting_predicted_pts" : "&emsp;&emsp;Predicted Points"
}

%>
<%- include('../partials/head') %> 
<body>
    <div class="container-fluid">
        <header class="blog-header py-3">
            <div class="row flex-nowrap justify-content-between align-items-center">
                <div class="col-2 pt-1">
                    <a class="btn btn-sm btn-outline-primary" href="/">Index</a>
                </div>
                <div class="col-8 text-center">
                    <!-- <a class="blog-header-logo text-dark" href="#">Large</a> -->
                    <div>
                        <h2><%= awayTeam.nickname %> <%= awayComp.score %>, <%= homeTeam.nickname %> <%= homeComp.score %></h2>
                        <p class="text-small" id="game-date"></p>
                    </div>
                </div>
                <div class="col-2 d-flex justify-content-end align-items-center">
                    <a class="btn btn-sm btn-outline-secondary" href="https://github.com/saiemgilani/game-on-paper-app">GitHub</a>
                  </div>
            </div>
        </header>
        
        <div class="nav-scroller py-1 mb-3">
            <nav class="nav d-flex justify-content-between">
                <a href="#wpChart" class="p-2 link-secondary">WP Chart</a>
                <a href="#epChart" class="p-2 link-secondary">EPA Chart</a>
                <a class="p-2 link-secondary" href="#box-score">Box Score</a>
                <a href="#big-plays" class="p-2 link-secondary">Big Plays</a>
                <a href="#most-imp-plays" class="p-2 link-secondary">Most Important Plays</a>
                <a href="#scoring-plays" class="p-2 link-secondary">Scoring Plays</a>
                <a href="#all-plays" class="p-2 link-secondary">All Plays</a>
                <a class="p-2 link-secondary" href="https://www.espn.com/college-football/game/_/gameId/<%= gameData.gameInfo.id %>">ESPN</a>
                <a class="p-2 link-secondary" href="/cfb/game/<%= gameData.gameInfo.id %>?json=1">Raw JSON</a>
            </nav>
        </div>
    </div>
    <div class="container-fluid">
        <% if (gameData.plays.length > 0) { %>
            <div class="row mb-3">
                <main class="ms-sm-auto col-lg-6 px-md-4">
                    <div>
                        <h1 class="h2">Win Probability</h1>
                        <%
                            function printSpread() {
                                if (parseFloat(gameData.homeTeamSpread) > 0) {
                                    return `${homeTeam.abbreviation} -${gameData.homeTeamSpread}`
                                } else if (parseFloat(gameData.homeTeamSpread) < 0) {
                                    return `${awayTeam.abbreviation} ${gameData.homeTeamSpread}`
                                } else {
                                    return "PUSH"
                                }
                            }
                        %>
                        <p class="text-small">
                            <% if (gameData.gameInfo.status.type.completed == true) { %>
                                Game Excitement Index: <%= (Math.round(gameData.gameInfo.gei * 100) / 100).toFixed(2) %> | 
                            <% } %>Spread: <%= printSpread() %>
                            <% if (gameData.gameInfo.status.type.name.includes("STATUS_IN_PROGRESS") && gameData.plays.length > 0) { %>
                                <% let lastPlay = gameData.plays[gameData.plays.length - 1] %>
                                <% if (lastPlay.winProbability.before >= 0.5) { %>
                                 | Current: <%= (lastPlay.pos_team == homeTeam.id) ? homeTeam.abbreviation : awayTeam.abbreviation %> <%= ((Math.round(lastPlay.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%
                                <% } else { %>
                                 | Current: <%= (lastPlay.pos_team == homeTeam.id) ? awayTeam.abbreviation : homeTeam.abbreviation %> <%= ((Math.round((1.0 - lastPlay.winProbability.before) * 1000) / 1000) * 100).toFixed(1) %>%
                                <% } %>
                            <% } %>
                            <!-- can't offer download button here because of canvas security issues -->
                             <!-- | 
                            <a id="wp-download" download="game-wp-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p> -->
                    </div>
                    <canvas class="my-4 w-100" id="wpChart" width="900" height="380"></canvas>
                </main>
                <main class="ms-sm-auto col-lg-6 px-md-4">
                    <div>
                        <h1 class="h2">Expected Points</h1>
                        <p class="text-small"><a id="ep-download" download="game-ep-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p>
                    </div>
                    <canvas class="my-4 w-100" id="epChart" width="900" height="380"></canvas>
                </main>
            </div>
        <% } %>
            <div class="row mb-0">
                <div class="col-12 mb-0 px-md-4">
                    <h2 id="box-score">Advanced Box Score</h2>
                </div>
            </div>    
            <div class="row mb-3">
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["EPA_plays","EPA_overall_total","EPA_passing_overall","EPA_rushing_overall"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <div class="table-responsive">
                        <% var columns = ["EPA_plays","rushes","rushing_power_success","rushing_stuff_rate","rushing_stopped_rate","rushing_opportunity_rate","rushing_highlight_run"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["EPA_plays","EPA_success","EPA_success_pass","EPA_success_rush","EPA_success_standard_down","EPA_success_passing_down"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
    
                    <div class="table-responsive">
                        <% var columns = ["EPA_plays","EPA_explosive","EPA_explosive_passing","EPA_explosive_rushing"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-4 ms-sm-auto col-lg-4 px-md-4">
                    <div class="table-responsive">
                        <% var columns = ["EPA_plays","havoc_total","havoc_total_pass","havoc_total_rush","TFL","TFL_pass","TFL_rush"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>                                        
                    <div class="table-responsive">
                        <% var columns = ["EPA_fg","EPA_punt","EPA_kickoff"]; %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;"><small><i>Stat</i></small></th>
                                    <% gameData.boxScore.team.map(group => group.pos_team).forEach(value => { %>
                                        <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                    <% }); %>
                                </tr>
                            </thead>
                            <tbody>
                                <% columns.forEach(item => { %>
                                    <tr>
                                        <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                        <% gameData.boxScore.team.forEach(teamData => { %>
                                            <td style="text-align: center;"><%= teamData[item] %></td>
                                        <% }); %>
                                    </tr>
                                    
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        <%
            var bigPlays = [...gameData.plays]
            bigPlays.sort((a, b) => {
                var diff = Math.abs(a.expectedPoints.added) - Math.abs(b.expectedPoints.added)
                if (diff < 0) {
                    return 1
                } else if (diff > 0) {
                    return -1
                } else {
                    return 0
                }
            })
            bigPlays = bigPlays.slice(0, 10)

            var mostImpPlays = [...gameData.plays]
            mostImpPlays.sort((a, b) => {
                var diff = Math.abs(a.winProbability.added) - Math.abs(b.winProbability.added)
                if (diff < 0) {
                    return 1
                } else if (diff > 0) {
                    return -1
                } else {
                    return 0
                }
            })
            mostImpPlays = mostImpPlays.slice(0, 10)
        %>
        <div class="row mb-3">
            <div class="col-lg-6 ms-sm-auto px-md-4" id="big-plays">
                <div>
                    <h2>Big Plays</h2>
                    <p class="text-small">As determined by absolute EPA.</p>
                </div>
                <% if (bigPlays != null && bigPlays.length > 0) { %>
                    <div class="table-responsive">
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Time</th>
                                    <th style="text-align: center;">Offense</th>
                                    <th style="text-align: left;">Play Description</th>
                                    <th style="text-align: center;">EPA</th>
                                    <th style="text-align: center;">WP%</th>
                                    <th style="text-align: right;">WPA</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% bigPlays.forEach(play => { %>
                                    <tr>
                                        <% 
                                            var period = `Q${play.period}`;
                                            if (play.period > 5) {
                                                period = `${play.period - 4}OT`
                                            } else if (play.period == 5) {
                                                period = "OT"
                                            } else {
                                                period = `Q${play.period} ${play.clock.displayValue}`;
                                            }

                                            var offense = (play.pos_team == homeTeam.id) ? homeTeam : awayTeam;
                                            var defense = (play.pos_team == homeTeam.id) ? awayTeam : homeTeam;
                                            var scoreText = (play.scoringPlay == true) ? ` - <strong>${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</strong>` : ""
                                        %>
                                        <td style="text-align: left;"><%= period %></td>
                                        <td style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.pos_team %>.png" alt="ESPN team id <%= play.pos_team %>"/></td>
                                        <td style="text-align: left;">(<%= formatDistance(play.start.down, play.playType, play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %><%- scoreText %></td>
                                        
                                        <td style="text-align: center;"><%= (Math.round(play.expectedPoints.added * 100) / 100).toFixed(2) %></td>
                                        <td style="text-align: center;"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                        <td style="text-align: right;"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                <% } else { %>
                    <p class="text-center text-muted">No big plays listed for this game.</p>
                <% } %>
            </div>
            <div class="col-lg-6 ms-sm-auto px-md-4" id="most-imp-plays">
                <div>
                    <h2>Most Important Plays</h2>
                    <p class="text-small">As determined by absolute WPA.</p>
                </div>
                <% if (mostImpPlays != null && mostImpPlays.length > 0) { %>
                <div class="table-responsive">
                    <table class="table table-striped table-sm">
                        <thead>
                            <tr>
                                <th style="text-align: left;">Time</th>
                                <th style="text-align: center;">Offense</th>
                                <th style="text-align: left;">Play Description</th>
                                <th style="text-align: center;">EPA</th>
                                <th style="text-align: center;">WP%</th>
                                <th style="text-align: right;">WPA</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% mostImpPlays.forEach(play => { %>
                                <tr>
                                    <% 
                                        var period = `Q${play.period}`;
                                        if (play.period > 5) {
                                            period = `${play.period - 4}OT`
                                        } else if (play.period == 5) {
                                            period = "OT"
                                        } else {
                                            period = `Q${play.period} ${play.clock.displayValue}`;
                                        }

                                        var offense = (play.pos_team == homeTeam.id) ? homeTeam : awayTeam;
                                        var defense = (play.pos_team == homeTeam.id) ? awayTeam : homeTeam;

                                        var scoreText = (play.scoringPlay == true) ? ` - <strong>${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</strong>` : ""
                                    %>
                                    <td style="text-align: left;"><%= period %></td>
                                    <td style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.pos_team %>.png" alt="ESPN team id <%= play.pos_team %>"/></td>
                                    <td style="text-align: left;">(<%= formatDistance(play.start.down, play.playType, play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %><%- scoreText %></td>
                                    
                                    <td style="text-align: center;"><%= (Math.round(play.expectedPoints.added * 100) / 100).toFixed(2) %></td>
                                    <td style="text-align: center;"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                    <td style="text-align: right;"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
                <% } else { %>
                    <p class="text-center text-muted">No important plays listed for this game.</p>
                <% } %>
            </div>
        </div>
        
        <div class="row mb-3">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <h2 id="scoring-plays">Scoring Plays</h2>
                <div class="table-responsive">
                    <% if (gameData.scoringPlays != null && gameData.scoringPlays.length > 0) { %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Time</th>
                                    <th style="text-align: center;">Offense</th>
                                    <th style="text-align: left;">Play Description</th>
                                    <th style="text-align: center;">EPA</th>
                                    <th style="text-align: center;">WP%</th>
                                    <th style="text-align: right;">WPA</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% gameData.scoringPlays.forEach(play => { %>
                                    <tr>
                                        <% 
                                            var period = `Q${play.period}`;
                                            if (play.period > 5) {
                                                period = `${play.period - 4}OT`
                                            } else if (play.period == 5) {
                                                period = "OT"
                                            } else {
                                                period = `Q${play.period} ${play.clock.displayValue}`;
                                            }

                                            var offense = (play.pos_team == homeTeam.id) ? homeTeam : awayTeam;
                                            var defense = (play.pos_team == homeTeam.id) ? awayTeam : homeTeam;

                                            var scoreText = (play.scoringPlay == true) ? ` - <strong>${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</strong>` : ""
                                        %>
                                        <td style="text-align: left;"><%= period %></td>
                                        <td style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.pos_team %>.png" alt="ESPN team id <%= play.pos_team %>"/></td>
                                        <td style="text-align: left;">(<%= formatDistance(play.start.down, play.playType, play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %><%- scoreText %></td>
                                        
                                        <td style="text-align: center;"><%= (Math.round(play.expectedPoints.added * 100) / 100).toFixed(2) %></td>
                                        <td style="text-align: center;"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                        <td style="text-align: right;"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <p class="text-center">No scoring plays in this game.</p>
                    <% } %>
                </div>
            </main>
        </div>
        <div class="row mb-3">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <%  var gamePlays = [...gameData.plays] 
                    if (gameData.gameInfo.status.type.completed != true) {
                        gamePlays.reverse()
                    }
                %>
                <div>
                    <h2 id="all-plays">All Plays</h2>
                    <p class="text-small"><% (gameData.gameInfo.status.type.completed == true) ? "" : "Most recent plays first." %></p>
                </div>
                <div class="table-responsive">
                    <% if (gamePlays != null && gamePlays.length > 0) { %>
                        <table class="table table-striped table-sm">
                            <thead>
                                <tr>
                                    <th style="text-align: left;">Time</th>
                                    <th style="text-align: center;">Offense</th>
                                    <th style="text-align: left;">Play Description</th>
                                    <th style="text-align: center;">EPA</th>
                                    <th style="text-align: center;">WP%</th>
                                    <th style="text-align: right;">WPA</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% gameData.plays.forEach(play => { %>
                                    <tr>
                                        <% 
                                            var period = `Q${play.period}`;
                                            if (play.period > 5) {
                                                period = `${play.period - 4}OT`
                                            } else if (play.period == 5) {
                                                period = "OT"
                                            } else {
                                                period = `Q${play.period} ${play.clock.displayValue}`;
                                            }

                                            var offense = (play.pos_team == homeTeam.id) ? homeTeam : awayTeam;
                                            var defense = (play.pos_team == homeTeam.id) ? awayTeam : homeTeam;

                                            var scoreText = (play.scoringPlay == true) ? ` - <strong>${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</strong>` : ""
                                        %>
                                        <td style="text-align: left;"><%= period %></td>
                                        <td style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= play.pos_team %>.png" alt="ESPN team id <%= play.pos_team %>"/></td>
                                        <td style="text-align: left;">(<%= formatDistance(play.start.down, play.playType, play.start.distance, play.start.yardsToEndzone) %> at <%= formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) %>) <%= play.text %><%- scoreText %></td>
                                        
                                        
                                        <td style="text-align: center;"><%= (Math.round(play.expectedPoints.added * 100) / 100).toFixed(2) %></td>
                                        <td style="text-align: center;"><%= ((Math.round(play.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                        <td style="text-align: right;"><%= ((Math.round(play.winProbability.added * 1000) / 1000) * 100).toFixed(1) %>%</td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <p class="text-center text-muted">No plays in this game.</p>
                    <% } %>
                </div>
                <!-- <p id="content"></p> -->
            </main>
        </div>
    </div>
    <%- include('../partials/footer') %>
    <%- include('../partials/scripts') %>        
    <script src="/assets/js/feather.min.js" crossorigin="anonymous"></script>
    <script src="/assets/js/Chart.min.js" crossorigin="anonymous"></script>
    <script>
        const DateTime = luxon.DateTime;
        var gameData = <%- JSON.stringify(gameData) %>;
        // document.body.querySelector("#content").innerHTML = "<pre>" + JSON.stringify(gameData.plays, null, 2) +  "</pre>";
        var statusDetail = gameData.gameInfo.status.type.detail;
        if (gameData.gameInfo.status.type.completed == true || statusDetail.includes("Cancel") || statusDetail.includes("Postpone")) {
            document.body.querySelector("#game-date").innerText = statusDetail + " - " + DateTime.fromISO(gameData.gameInfo.date).toLocaleString(DateTime.DATETIME_FULL);
        } else {
            var airings = gameData.gameInfo.airings;
            var airingLink = (airings != null && airings.length > 0) ? airings[0].webAiringLink : null
            if (airingLink != null) {
                document.body.querySelector("#game-date").innerHTML = "<a href=" + airingLink + ">LIVE</a> - " + statusDetail
            } else {
                document.body.querySelector("#game-date").innerText = "LIVE - " + statusDetail
            }
        }
      </script>
    </script>
    <script src="/assets/js/dashboard.js"></script>
</body>
</html>